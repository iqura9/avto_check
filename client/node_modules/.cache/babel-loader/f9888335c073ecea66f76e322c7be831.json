{"ast":null,"code":"let initialState = {\n  MainNumberURL: '',\n  info: [\n    /*{id:1, number: 334443113}*/\n  ]\n};\nexport const showReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'newURL':\n      return { ...state,\n        MainNumberURL: action.url\n      };\n\n    case 'initProgram':\n      return { ...state,\n        info: JSON.parse(localStorage.getItem('testObject')),\n        MainNumberURL: JSON.parse(localStorage.getItem('mainURL'))\n      };\n\n    case 'setInxToInfo':\n      return { ...state,\n        info: [...state.info, {\n          id: state.info.length + 1,\n          number: action.number\n        }]\n      };\n\n    case 'deleteId':\n      return { ...state,\n        info: state.info.filter(f => f.number != action.id)\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const changeUrl = url => {\n  return {\n    type: 'newURL',\n    url\n  };\n};\nexport const setInitializeProgram = () => {\n  return {\n    type: 'initProgram'\n  };\n};\nexport const setInxToInfo = number => {\n  return {\n    type: 'setInxToInfo',\n    number\n  };\n};\nexport const deleteIdAC = id => {\n  return {\n    type: 'deleteId',\n    id\n  };\n};\nexport const sendThunka = number => async (dispatch, getState) => {\n  let response = await dispatch(setInxToInfo(number));\n\n  if (response) {\n    localStorage.setItem('testObject', JSON.stringify(getState().showPage.info));\n  }\n};\nexport const deleteIdACThunk = number => async (dispatch, getState) => {\n  let response = await dispatch(deleteIdAC(number));\n\n  if (response) {\n    localStorage.setItem('testObject', JSON.stringify(getState().showPage.info));\n    dispatch(setInitializeProgram());\n  }\n};","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/src/Redux/reducers/showPageReducer.js"],"names":["initialState","MainNumberURL","info","showReducer","state","action","type","url","JSON","parse","localStorage","getItem","id","length","number","filter","f","changeUrl","setInitializeProgram","setInxToInfo","deleteIdAC","sendThunka","dispatch","getState","response","setItem","stringify","showPage","deleteIdACThunk"],"mappings":"AACA,IAAIA,YAAY,GAAG;AACfC,EAAAA,aAAa,EAAC,EADC;AAEfC,EAAAA,IAAI,EAAC;AACD;AADC;AAFU,CAAnB;AAOA,OAAO,MAAMC,WAAW,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAxBJ,YAAwB;AAAA,MAAVK,MAAU;;AAEtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAM,EACF,GAAGF,KADD;AAEFH,QAAAA,aAAa,EAAEI,MAAM,CAACE;AAFpB,OAAN;;AAIJ,SAAK,aAAL;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,IAAI,EAACM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAFH;AAGFV,QAAAA,aAAa,EAACO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX;AAHZ,OAAN;;AAKJ,SAAK,cAAL;AACI,aAAM,EACF,GAAGP,KADD;AAEFF,QAAAA,IAAI,EAAC,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgB;AAACU,UAAAA,EAAE,EAAER,KAAK,CAACF,IAAN,CAAWW,MAAX,GAAkB,CAAvB;AAA0BC,UAAAA,MAAM,EAAET,MAAM,CAACS;AAAzC,SAAhB;AAFH,OAAN;;AAIJ,SAAK,UAAL;AACI,aAAM,EACF,GAAGV,KADD;AAEFF,QAAAA,IAAI,EAACE,KAAK,CAACF,IAAN,CAAWa,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACF,MAAF,IAAWT,MAAM,CAACO,EAAzC;AAFH,OAAN;;AAIJ;AAAS;AACL,eAAOR,KAAP;AACH;AAxBL;AA0BH,CA5BM;AA6BP,OAAO,MAAMa,SAAS,GAAIV,GAAD,IAAS;AAC9B,SAAM;AACFD,IAAAA,IAAI,EAAE,QADJ;AAEFC,IAAAA;AAFE,GAAN;AAIH,CALM;AAMP,OAAO,MAAMW,oBAAoB,GAAG,MAAM;AACtC,SAAM;AACFZ,IAAAA,IAAI,EAAE;AADJ,GAAN;AAGH,CAJM;AAKP,OAAO,MAAMa,YAAY,GAAIL,MAAD,IAAY;AACpC,SAAM;AACFR,IAAAA,IAAI,EAAE,cADJ;AAEFQ,IAAAA;AAFE,GAAN;AAIH,CALM;AAMP,OAAO,MAAMM,UAAU,GAAIR,EAAD,IAAQ;AAC9B,SAAM;AACFN,IAAAA,IAAI,EAAE,UADJ;AAEFM,IAAAA;AAFE,GAAN;AAIH,CALM;AAQP,OAAO,MAAMS,UAAU,GAAIP,MAAD,IAAY,OAAOQ,QAAP,EAAgBC,QAAhB,KAA4B;AAC9D,MAAIC,QAAQ,GAAG,MAAMF,QAAQ,CAACH,YAAY,CAACL,MAAD,CAAb,CAA7B;;AACA,MAAGU,QAAH,EAAa;AACTd,IAAAA,YAAY,CAACe,OAAb,CAAqB,YAArB,EAAmCjB,IAAI,CAACkB,SAAL,CAAeH,QAAQ,GAAGI,QAAX,CAAoBzB,IAAnC,CAAnC;AACH;AACJ,CALM;AAMP,OAAO,MAAM0B,eAAe,GAAId,MAAD,IAAY,OAAOQ,QAAP,EAAgBC,QAAhB,KAA4B;AACnE,MAAIC,QAAQ,GAAG,MAAMF,QAAQ,CAACF,UAAU,CAACN,MAAD,CAAX,CAA7B;;AACA,MAAGU,QAAH,EAAa;AACTd,IAAAA,YAAY,CAACe,OAAb,CAAqB,YAArB,EAAmCjB,IAAI,CAACkB,SAAL,CAAeH,QAAQ,GAAGI,QAAX,CAAoBzB,IAAnC,CAAnC;AACAoB,IAAAA,QAAQ,CAACJ,oBAAoB,EAArB,CAAR;AACH;AACJ,CANM","sourcesContent":["\nlet initialState = {\n    MainNumberURL:'',\n    info:[\n        /*{id:1, number: 334443113}*/\n    ]\n}\n\nexport const showReducer = (state=initialState, action) =>{\n\n    switch (action.type) {\n        case 'newURL':\n            return{\n                ...state,\n                MainNumberURL: action.url\n            }\n        case 'initProgram':\n            return{\n                ...state,\n                info:JSON.parse(localStorage.getItem('testObject')),\n                MainNumberURL:JSON.parse(localStorage.getItem('mainURL')),\n            }\n        case 'setInxToInfo':\n            return{\n                ...state,\n                info:[...state.info, {id: state.info.length+1, number: action.number}]\n            }\n        case 'deleteId':\n            return{\n                ...state,\n                info:state.info.filter(f => f.number !=action.id)\n            }\n        default: {\n            return state;\n        }\n    }\n}\nexport const changeUrl = (url) => {\n    return{\n        type: 'newURL',\n        url\n    }\n}\nexport const setInitializeProgram = () => {\n    return{\n        type: 'initProgram',\n    }\n}\nexport const setInxToInfo = (number) => {\n    return{\n        type: 'setInxToInfo',\n        number\n    }\n}\nexport const deleteIdAC = (id) => {\n    return{\n        type: 'deleteId',\n        id\n    }\n}\n\n\nexport const sendThunka = (number) => async (dispatch,getState) =>{\n    let response = await dispatch(setInxToInfo(number));\n    if(response) {\n        localStorage.setItem('testObject', JSON.stringify(getState().showPage.info));\n    }\n}\nexport const deleteIdACThunk = (number) => async (dispatch,getState) =>{\n    let response = await dispatch(deleteIdAC(number));\n    if(response) {\n        localStorage.setItem('testObject', JSON.stringify(getState().showPage.info));\n        dispatch(setInitializeProgram());\n    }\n}"]},"metadata":{},"sourceType":"module"}