{"ast":null,"code":"var _jsxFileName = \"/Users/iqura/web_storm_projects/avto/client/src/UI/FIRST_PAGE/MainPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { actions } from \"../../Redux/reducers/showPageReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { setCarFromDB } from \"../../Redux/reducers/folderPageReducer\";\nimport Folder from \"../Folder/Folder\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [yes, setYes] = useState(false);\n  const [CarAvaible, setCarAvaible] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(setCarFromDB());\n\n    if (JSON.parse(localStorage.getItem('mainURL') || \"\")) {\n      dispatch(actions.setInitializeProgram());\n      setCarAvaible(true);\n    }\n  }, []);\n  let val = '';\n  let ref = useRef(null);\n\n  const sendInfo = () => {\n    dispatch(actions.changeUrl(val));\n    if (ref.current && ref) ref.current.value = '';\n    setYes(true);\n    localStorage.setItem('mainURL', JSON.stringify(val));\n  };\n\n  const seeValue = e => {\n    val = e.target.value;\n  };\n\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    shouldUseNativeValidation: true\n  });\n\n  const onSubmit = async data => {\n    if (data.favShow === 'Array') {\n      history.push({\n        pathname: `/show/array/${data.number}`\n      });\n    } else {\n      history.push({\n        pathname: `/show/${data.number}`\n      });\n    }\n  };\n\n  if (yes) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/show\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Car_app\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"type a number\",\n        ...register(\"number\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio_buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"got\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('favShow', {\n              required: true\n            }),\n            type: \"radio\",\n            name: \"favShow\",\n            value: \"oneCar\",\n            className: \"form-check-input\",\n            id: \"got\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u041E\\u0434\\u043D\\u0430 \\u043C\\u0430\\u0448\\u0438\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"breadking-bad\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            defaultChecked: true,\n            ...register('favShow', {\n              required: true\n            }),\n            type: \"radio\",\n            name: \"favShow\",\n            value: \"Array\",\n            className: \"form-check-input\",\n            id: \"breadking-bad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043C\\u0430\\u0448\\u0438\\u043D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Info about Cars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), CarAvaible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Align_NIW\",\n      children: /*#__PURE__*/_jsxDEV(Folder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainPage, \"+fECffzg9q34E3VvqdZsLnlqaWo=\", false, function () {\n  return [useDispatch, useHistory, useForm];\n});\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/client/src/UI/FIRST_PAGE/MainPage.tsx"],"names":["React","useEffect","useRef","useState","Redirect","useHistory","actions","useDispatch","setCarFromDB","Folder","useForm","MainPage","dispatch","yes","setYes","CarAvaible","setCarAvaible","history","JSON","parse","localStorage","getItem","setInitializeProgram","val","ref","sendInfo","changeUrl","current","value","setItem","stringify","seeValue","e","target","register","handleSubmit","shouldUseNativeValidation","onSubmit","data","favShow","push","pathname","number","required"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {Redirect, useHistory} from \"react-router-dom\";\nimport {actions} from \"../../Redux/reducers/showPageReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {ShowImgInRow} from \"./ShowImgInRow\";\nimport {AppStateType} from \"../../Redux/Redux-store\";\nimport {adminApi} from \"../../Api/Api\";\nimport {setCarFromDB} from \"../../Redux/reducers/folderPageReducer\";\nimport Folder from \"../Folder/Folder\";\nimport {useForm} from \"react-hook-form\";\n\nexport const MainPage: React.FC<{}> = () => {\n    const dispatch = useDispatch();\n    const [yes, setYes] = useState(false);\n    const [CarAvaible, setCarAvaible] = useState(false);\n    const history = useHistory();\n    useEffect(() => {\n        dispatch(setCarFromDB())\n        if (JSON.parse(localStorage.getItem('mainURL') || \"\")) {\n            dispatch(actions.setInitializeProgram());\n            setCarAvaible(true);\n        }\n    }, []);\n\n    let val = '';\n    let ref = useRef<HTMLInputElement>(null);\n\n    const sendInfo = () => {\n        dispatch(actions.changeUrl(val));\n        if (ref.current && ref) ref.current.value = '';\n        setYes(true);\n        localStorage.setItem('mainURL', JSON.stringify(val));\n    }\n    const seeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n        val = e.target.value;\n    }\n    const {register, handleSubmit} = useForm({shouldUseNativeValidation: true});\n    const onSubmit = async (data: any) => {\n        if(data.favShow === 'Array'){\n            history.push({\n                pathname: `/show/array/${data.number}`\n            });\n        }else{\n            history.push({\n                pathname: `/show/${data.number}`\n            });\n        }\n    };\n    if (yes) return <Redirect to={\"/show\"}/>\n    return (\n        <>\n            <form className='Car_app' onSubmit={handleSubmit(onSubmit)}>\n                <input type=\"text\" placeholder='type a number' {...register(\"number\")}/>\n                <div className='radio_buttons'>\n                <label htmlFor=\"got\">\n                    <input\n                        {...register('favShow', {required: true})}\n                        type=\"radio\"\n                        name=\"favShow\"\n                        value=\"oneCar\"\n                        className=\"form-check-input\"\n                        id=\"got\"\n                    />{' '}\n                    <span>Одна машина</span>\n                </label>\n                <label htmlFor=\"breadking-bad\">\n                    <input defaultChecked={true}\n                        {...register('favShow', {required: true})}\n\n                        type=\"radio\"\n                        name=\"favShow\"\n                        value=\"Array\"\n                        className=\"form-check-input\"\n                        id=\"breadking-bad\"\n                    />\n                    <span>Список машин</span>\n                </label>\n                </div>\n                <button>Check</button>\n                <div>Info about Cars</div>\n            </form>\n            {CarAvaible &&\n                <div className='Align_NIW'>\n                    <Folder/>\n                </div>\n            }\n\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}