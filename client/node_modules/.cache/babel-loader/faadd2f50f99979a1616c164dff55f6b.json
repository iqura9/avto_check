{"ast":null,"code":"import axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nconst instance = axios.create({\n  baseURL: 'http://192.168.0.6:9000/',\n  headers: {\n    'Authorization': 'Bearer ' + adminApi.accessToken()\n  }\n});\nexport const adminApi = {\n  accessToken() {\n    return useSelector(state => state.auth.accessToken);\n  },\n\n  getGoods() {\n    return instance.get(`api/cars`).then(res => res.data);\n  },\n\n  addNewFolder(data) {\n    return instance.post(`api/cars`, { ...data\n    }).then(res => res.data);\n  },\n\n  updateFolderName(id, data) {\n    return instance.put(`api/cars/${id}`, { ...data\n    }).then(res => res.data);\n  },\n\n  deleteFolder(id, userId) {\n    const mainId = `?id=${id}&userId=${userId}`;\n    return instance.delete(`api/cars${mainId}`).then(res => res.data);\n  },\n\n  loginMe(data) {\n    const {\n      email,\n      password\n    } = data;\n    return instance.post(`/auth/signIn`, {\n      email,\n      password\n    }).then(res => res.data);\n  },\n\n  signUp(data) {\n    return instance.post(`/auth/signUp`, data).then(res => res.data);\n  },\n\n  getFolders(id) {\n    return instance.get(`/api/users/${id}`).then(res => res.data);\n  },\n\n  addIdOfCar(data) {\n    return instance.post(`/api/users`, data).then(res => res.data);\n  }\n\n};","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/client/src/Api/Api.tsx"],"names":["axios","useSelector","instance","create","baseURL","headers","adminApi","accessToken","state","auth","getGoods","get","then","res","data","addNewFolder","post","updateFolderName","id","put","deleteFolder","userId","mainId","delete","loginMe","email","password","signUp","getFolders","addIdOfCar"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AAGA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,0BADiB;AAE1BC,EAAAA,OAAO,EAAE;AAAC,qBAAiB,YAAUC,QAAQ,CAACC,WAAT;AAA5B;AAFiB,CAAb,CAAjB;AAKA,OAAO,MAAMD,QAAQ,GAAG;AACpBC,EAAAA,WAAW,GAAG;AACV,WAAON,WAAW,CAAGO,KAAD,IAAwBA,KAAK,CAACC,IAAN,CAAWF,WAArC,CAAlB;AACH,GAHmB;;AAIpBG,EAAAA,QAAQ,GAAG;AACP,WAAOR,QAAQ,CAACS,GAAT,CAA2B,UAA3B,EAAsCC,IAAtC,CAA2CC,GAAG,IAAGA,GAAG,CAACC,IAArD,CAAP;AACH,GANmB;;AAOpBC,EAAAA,YAAY,CAACD,IAAD,EAAU;AAClB,WAAOZ,QAAQ,CAACc,IAAT,CAAe,UAAf,EAA0B,EAAC,GAAGF;AAAJ,KAA1B,EAAqCF,IAArC,CAA0CC,GAAG,IAAEA,GAAG,CAACC,IAAnD,CAAP;AACH,GATmB;;AAUpBG,EAAAA,gBAAgB,CAACC,EAAD,EAAWJ,IAAX,EAAoB;AAChC,WAAOZ,QAAQ,CAACiB,GAAT,CAAc,YAAWD,EAAG,EAA5B,EAA+B,EAAC,GAAGJ;AAAJ,KAA/B,EAA0CF,IAA1C,CAA+CC,GAAG,IAAEA,GAAG,CAACC,IAAxD,CAAP;AACH,GAZmB;;AAapBM,EAAAA,YAAY,CAACF,EAAD,EAASG,MAAT,EAAqB;AAC7B,UAAMC,MAAM,GAAG,OAAMJ,EAAG,WAAUG,MAAO,EAAzC;AACA,WAAOnB,QAAQ,CAACqB,MAAT,CAAiB,WAAUD,MAAO,EAAlC,EAAuCV,IAAvC,CAA4CC,GAAG,IAAGA,GAAG,CAACC,IAAtD,CAAP;AACH,GAhBmB;;AAiBpBU,EAAAA,OAAO,CAACV,IAAD,EAAyC;AAC5C,UAAM;AAACW,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAmBZ,IAAzB;AACA,WAAOZ,QAAQ,CAACc,IAAT,CAAe,cAAf,EAA8B;AAACS,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAA9B,EAAgDd,IAAhD,CAAqDC,GAAG,IAAEA,GAAG,CAACC,IAA9D,CAAP;AACH,GApBmB;;AAqBpBa,EAAAA,MAAM,CAACb,IAAD,EAAyC;AAC3C,WAAOZ,QAAQ,CAACc,IAAT,CAAe,cAAf,EAA8BF,IAA9B,EAAoCF,IAApC,CAAyCC,GAAG,IAAEA,GAAG,CAACC,IAAlD,CAAP;AACH,GAvBmB;;AAwBpBc,EAAAA,UAAU,CAACV,EAAD,EAAW;AACjB,WAAOhB,QAAQ,CAACS,GAAT,CAAc,cAAaO,EAAG,EAA9B,EAAiCN,IAAjC,CAAsCC,GAAG,IAAEA,GAAG,CAACC,IAA/C,CAAP;AACH,GA1BmB;;AA2BpBe,EAAAA,UAAU,CAACf,IAAD,EAAU;AAChB,WAAOZ,QAAQ,CAACc,IAAT,CAAe,YAAf,EAA4BF,IAA5B,EAAkCF,IAAlC,CAAuCC,GAAG,IAAEA,GAAG,CAACC,IAAhD,CAAP;AACH;;AA7BmB,CAAjB","sourcesContent":["import axios from \"axios\";\nimport {cars} from \"../Redux/reducers/folderPageReducer\";\nimport {useSelector} from \"react-redux\";\nimport {AppStateType} from \"../Redux/Redux-store\";\n\nconst instance = axios.create({\n    baseURL: 'http://192.168.0.6:9000/',\n    headers: {'Authorization': 'Bearer '+adminApi.accessToken() }\n})\n\nexport const adminApi = {\n    accessToken() {\n        return useSelector( (state:AppStateType) => state.auth.accessToken)\n    },\n    getGoods() {\n        return instance.get<Array<cars>>(`api/cars`).then(res=> res.data);\n    },\n    addNewFolder(data:any){\n        return instance.post(`api/cars`, {...data}).then(res=>res.data);\n    },\n    updateFolderName(id:string,data:any){\n        return instance.put(`api/cars/${id}`, {...data}).then(res=>res.data);\n    },\n    deleteFolder(id:any, userId:any) {\n        const mainId= `?id=${id}&userId=${userId}`;\n        return instance.delete(`api/cars${mainId}`, ).then(res=> res.data);\n    },\n    loginMe(data:{email: string, password: string}) {\n        const {email,password} = data;\n        return instance.post(`/auth/signIn`, {email,password}).then(res=>res.data);\n    },\n    signUp(data:{email: string, password: string}) {\n        return instance.post(`/auth/signUp`, data).then(res=>res.data);\n    },\n    getFolders(id:string){\n        return instance.get(`/api/users/${id}`).then(res=>res.data);\n    },\n    addIdOfCar(data:any){\n        return instance.post(`/api/users`, data).then(res=>res.data);\n    }\n\n}"]},"metadata":{},"sourceType":"module"}