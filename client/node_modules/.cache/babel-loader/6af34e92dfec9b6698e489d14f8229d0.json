{"ast":null,"code":"var _jsxFileName = \"/Users/iqura/web_storm_projects/avto/src/UI/Folder/folderInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FolderInfo = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const state = useSelector(state => state.folderPage.ArrayFolders);\n  const res = state.find(q => q.folderId === id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FolderInfo, \"ATCI91uYbcITX2FhM3z+G0jWLVo=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = FolderInfo;\nexport default FolderInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"FolderInfo\");","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/src/UI/Folder/folderInfo.tsx"],"names":["React","useParams","useSelector","FolderInfo","props","id","state","folderPage","ArrayFolders","res","find","q","folderId"],"mappings":";;;AAAA,OAAOA,KAAP,MAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,SAAQC,WAAR,QAA0B,aAA1B;;;AAQA,MAAMC,UAA8B,GAAIC,KAAD,IAAW;AAAA;;AAC9C,QAAM;AAACC,IAAAA;AAAD,MAAOJ,SAAS,EAAtB;AACA,QAAMK,KAAK,GAAGJ,WAAW,CAAGI,KAAD,IAAwBA,KAAK,CAACC,UAAN,CAAiBC,YAA3C,CAAzB;AACA,QAAMC,GAAG,GAAGH,KAAK,CAACI,IAAN,CAAYC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAeP,EAAhC,CAAZ;AACA,sBACI;AAAA,cACKA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CATD;;GAAMF,U;UACWF,S,EACCC,W;;;KAFZC,U;AAWN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport {AppStateType} from \"../../Redux/Redux-store\";\nimport {useSelector} from \"react-redux\";\n\ninterface PropsType {\n\n}\ninterface paramType {\n    id: string\n}\nconst FolderInfo:React.FC<PropsType> = (props) => {\n    const {id} = useParams<paramType>();\n    const state = useSelector( (state:AppStateType) => state.folderPage.ArrayFolders);\n    const res = state.find( q => q.folderId === id);\n    return (\n        <div>\n            {id}\n        </div>\n    );\n};\n\nexport default FolderInfo;"]},"metadata":{},"sourceType":"module"}