{"ast":null,"code":"var _jsxFileName = \"/Users/iqura/web_storm_projects/avto/client/src/UI/Folder/Folder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './folder.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { actions, addNewFolder, setCarFromDB } from \"../../Redux/reducers/folderPageReducer\";\nimport * as uuid from 'uuid';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Folder = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const cars = useSelector(state => state.folderPage.ArrayFolders);\n  console.log(cars);\n  if (cars.length === 0) dispatch(setCarFromDB());\n  const {\n    register,\n    handleSubmit,\n    getValues\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const [show, setShow] = useState('0');\n  let cool = '';\n\n  const folder = require(\"./../../img/folder.png\");\n\n  const nextPage = id => {\n    history.push(`/folder/${id}`);\n  };\n\n  const creatFolder = folderName => {\n    let newId = uuid.v4();\n    let push = {\n      /*folderId: newId,*/\n      _id: '232',\n      mainImg: '',\n      nameOfFolder: folderName + ' - ' + newId.slice(0, 4),\n      Cars: []\n    };\n    let newFolder = {\n      mainImg: '',\n      nameOfFolder: folderName + ' - ' + newId.slice(0, 4),\n      Cars: []\n    };\n    dispatch(addNewFolder(newFolder)); //dispatch(actions.addNewFolder(push));\n  };\n\n  const onSubmit = () => {\n    const formValues = getValues();\n\n    if (formValues.status.length >= 1 && formValues.status.length <= 30) {\n      dispatch(actions.changeName(cool, formValues.status));\n      setShow('0');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainBlockWrapper\",\n    children: [cars.map(m => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Block_Wrapper\",\n        onClick: () => nextPage(m._id),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Block_Center\",\n          children: m.Cars.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Block_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"Block_content-img\",\n            src: folder,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), show !== m._id && /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: e => {\n              e.stopPropagation();\n              setShow(m._id);\n            },\n            children: m.nameOfFolder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: e => {\n              e.stopPropagation();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onBlur: onSubmit,\n              children: show === m._id && /*#__PURE__*/_jsxDEV(\"input\", {\n                className: 'inputEdit',\n                ...register('status', {\n                  required: true\n                }),\n                autoFocus: true,\n                defaultValue: m.nameOfFolder,\n                onBlur: () => {\n                  cool = m._id;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Block_Wrapper\",\n      onClick: () => creatFolder('new folder'),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Block_Center-add\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Block_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Minus\",\n          children: \"Add Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Folder, \"4go5UOlt8jaffLexqQoq1eif7/w=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useForm];\n});\n\n_c = Folder;\nexport default Folder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Folder\");","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/client/src/UI/Folder/Folder.tsx"],"names":["React","useState","useDispatch","useSelector","useHistory","actions","addNewFolder","setCarFromDB","uuid","useForm","Folder","history","dispatch","cars","state","folderPage","ArrayFolders","console","log","length","register","handleSubmit","getValues","mode","show","setShow","cool","folder","require","nextPage","id","push","creatFolder","folderName","newId","v4","_id","mainImg","nameOfFolder","slice","Cars","newFolder","onSubmit","formValues","status","changeName","map","m","e","stopPropagation","required"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport './folder.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../Redux/Redux-store\";\nimport {useHistory} from \"react-router-dom\";\nimport {actions, addNewFolder, setCarFromDB} from \"../../Redux/reducers/folderPageReducer\";\nimport * as uuid from 'uuid';\nimport {useForm} from \"react-hook-form\";\n\nconst Folder = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const cars = useSelector((state: AppStateType) => state.folderPage.ArrayFolders);\n    console.log(cars);\n    if(cars.length===0) dispatch(setCarFromDB())\n\n    const {register, handleSubmit,getValues} = useForm({mode: \"onBlur\"});\n    const [show, setShow] = useState('0');\n    let cool = '';\n    const folder = require(\"./../../img/folder.png\");\n    const nextPage = (id: string | number) => {\n        history.push(`/folder/${id}`);\n    }\n\n    const creatFolder = (folderName: string) => {\n        let newId = uuid.v4();\n        let push = {\n            /*folderId: newId,*/\n            _id: '232',\n            mainImg: '',\n            nameOfFolder: folderName + ' - ' + newId.slice(0, 4),\n            Cars: []\n        }\n        let newFolder = {\n            mainImg: '',\n            nameOfFolder: folderName + ' - ' + newId.slice(0, 4),\n            Cars: [],\n        }\n        dispatch(addNewFolder(newFolder));\n        //dispatch(actions.addNewFolder(push));\n\n    }\n    const onSubmit = () => {\n        const formValues = getValues();\n        if(formValues.status.length >=1 && formValues.status.length<=30){\n            dispatch(actions.changeName(cool,formValues.status));\n            setShow('0')\n        }\n    }\n    return (\n        <div className='MainBlockWrapper'>\n            {\n                cars.map(m => {\n                    return (<div className='Block_Wrapper' onClick={() => nextPage(m._id)}>\n                            <span className='Block_Center'>{m.Cars.length}</span>\n                            <div className='Block_content'>\n                                <img className='Block_content-img' src={folder} alt=\"\"/>\n                                {\n                                    show !== m._id && <div onClick={(e) => {\n                                        e.stopPropagation();\n                                        setShow(m._id)\n                                    }}>{m.nameOfFolder}</div>\n                                }\n                                <div onClick={(e) => {\n                                    e.stopPropagation()\n                                }}>\n                                    <form onBlur={onSubmit}>\n                                        {\n\n                                            show === m._id &&\n                                            <input className={'inputEdit'} {...register('status', { required: true})} autoFocus={true} defaultValue={m.nameOfFolder}\n                                                   onBlur={() => {\n                                                       cool = (m._id)\n                                                   }}/>\n\n                                        }\n                                    </form>\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                    )\n                })\n            }\n            <div className='Block_Wrapper' onClick={() => creatFolder('new folder')}>\n                <span className='Block_Center-add'>+</span>\n                <div className='Block_content'>\n                    <div className='Circle'></div>\n                    <div className='Minus'>Add Folder</div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Folder;"]},"metadata":{},"sourceType":"module"}