{"ast":null,"code":"var _jsxFileName = \"/Users/iqura/web_storm_projects/avto/client/src/UI/loginForm/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport './styleForLoginForm.css';\nimport { useDispatch } from \"react-redux\";\nimport { authMeTC, loginTC } from \"../../Redux/reducers/authReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _errors$username, _errors$password;\n\n  // get functions to build form with useForm() hook\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n  const {\n    errors\n  } = formState;\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  function onSubmit(data) {\n    dispatch(loginTC(data));\n  }\n\n  dispatch(authMeTC());\n  if (localStorage.getItem(\"profile\")) history.push({\n    pathname: '/'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ...register('email'),\n              className: `form-control ${errors.username ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              ...register('password'),\n              className: `form-control ${errors.password ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: formState.isSubmitting,\n              className: \"btn btn-primary\",\n              children: [formState.isSubmitting && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 56\n              }, this), \"Login\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/account/register\",\n              className: \"btn btn-link\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"/JiiYZRYElX4xHs1nU78yXLSKl4=\", false, function () {\n  return [useForm, useHistory, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/client/src/UI/loginForm/Login.tsx"],"names":["React","useForm","NavLink","useHistory","useDispatch","authMeTC","loginTC","Login","register","handleSubmit","formState","errors","history","dispatch","onSubmit","data","localStorage","getItem","push","pathname","username","message","password","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useForm} from \"react-hook-form\";\nimport {NavLink, useHistory} from \"react-router-dom\";\nimport './styleForLoginForm.css'\nimport {useDispatch} from \"react-redux\";\nimport {authMeTC, loginTC} from \"../../Redux/reducers/authReducer\";\nconst Login: React.FC<{}> = () => {\n\n    // get functions to build form with useForm() hook\n    const {register, handleSubmit, formState} = useForm();\n    const {errors} = formState;\n    const history = useHistory();\n    const dispatch = useDispatch();\n    function onSubmit(data:any) {\n        dispatch(loginTC(data));\n    }\n    dispatch(authMeTC());\n    if(localStorage.getItem(\"profile\")) history.push({pathname: '/'});\n    return (\n        <>\n            <div className=\"card\">\n                <h4 className=\"card-header\">Login</h4>\n                <div className=\"card-body\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div className=\"form-group\">\n                            <label>Username</label>\n                            <input type=\"text\" {...register('email')}\n                                   className={`form-control ${errors.username ? 'is-invalid' : ''}`}/>\n                            <div className=\"invalid-feedback\">{errors.username?.message}</div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input type=\"password\" {...register('password')}\n                                   className={`form-control ${errors.password ? 'is-invalid' : ''}`}/>\n                            <div className=\"invalid-feedback\">{errors.password?.message}</div>\n                        </div>\n                        <div className='button-list'>\n                        <button disabled={formState.isSubmitting} className=\"btn btn-primary\">\n                            {formState.isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                            Login\n                        </button>\n                        <NavLink to=\"/account/register\" className=\"btn btn-link\">Register</NavLink>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}