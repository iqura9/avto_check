{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: 'http://192.168.0.6:9000/',\n  //headers: {'Authorization': 'Bearer '+adminApi.accessToken() }\n  headers: {\n    \"Authorization\": `Bearer fuck`\n  }\n});\nexport const adminApi = {\n  getGoods() {\n    return instance.get(`api/cars`).then(res => res.data);\n  },\n\n  addNewFolder(data) {\n    return instance.post(`api/cars`, { ...data\n    }).then(res => res.data);\n  },\n\n  updateFolderName(id, data) {\n    return instance.put(`api/cars/${id}`, { ...data\n    }).then(res => res.data);\n  },\n\n  deleteFolder(id, userId) {\n    const mainId = `?id=${id}&userId=${userId}`;\n    return instance.delete(`api/cars${mainId}`).then(res => res.data);\n  },\n\n  loginMe(data) {\n    const {\n      email,\n      password\n    } = data;\n    return instance.post(`/auth/signIn`, {\n      email,\n      password\n    }).then(res => res.data);\n  },\n\n  signUp(data) {\n    return instance.post(`/auth/signUp`, data).then(res => res.data);\n  },\n\n  getFolders(id) {\n    return instance.get(`/api/users/${id}`).then(res => res.data);\n  },\n\n  addIdOfCar(data) {\n    return instance.post(`/api/users`, data).then(res => res.data);\n  }\n\n};","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/client/src/Api/Api.tsx"],"names":["axios","instance","create","baseURL","headers","adminApi","getGoods","get","then","res","data","addNewFolder","post","updateFolderName","id","put","deleteFolder","userId","mainId","delete","loginMe","email","password","signUp","getFolders","addIdOfCar"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,0BADiB;AAE1B;AACAC,EAAAA,OAAO,EAAG;AAAC,qBAAkB;AAAnB;AAHgB,CAAb,CAAjB;AAMA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,QAAQ,GAAG;AACP,WAAOL,QAAQ,CAACM,GAAT,CAA2B,UAA3B,EAAsCC,IAAtC,CAA2CC,GAAG,IAAGA,GAAG,CAACC,IAArD,CAAP;AACH,GAHmB;;AAIpBC,EAAAA,YAAY,CAACD,IAAD,EAAU;AAClB,WAAOT,QAAQ,CAACW,IAAT,CAAe,UAAf,EAA0B,EAAC,GAAGF;AAAJ,KAA1B,EAAqCF,IAArC,CAA0CC,GAAG,IAAEA,GAAG,CAACC,IAAnD,CAAP;AACH,GANmB;;AAOpBG,EAAAA,gBAAgB,CAACC,EAAD,EAAWJ,IAAX,EAAoB;AAChC,WAAOT,QAAQ,CAACc,GAAT,CAAc,YAAWD,EAAG,EAA5B,EAA+B,EAAC,GAAGJ;AAAJ,KAA/B,EAA0CF,IAA1C,CAA+CC,GAAG,IAAEA,GAAG,CAACC,IAAxD,CAAP;AACH,GATmB;;AAUpBM,EAAAA,YAAY,CAACF,EAAD,EAASG,MAAT,EAAqB;AAC7B,UAAMC,MAAM,GAAG,OAAMJ,EAAG,WAAUG,MAAO,EAAzC;AACA,WAAOhB,QAAQ,CAACkB,MAAT,CAAiB,WAAUD,MAAO,EAAlC,EAAuCV,IAAvC,CAA4CC,GAAG,IAAGA,GAAG,CAACC,IAAtD,CAAP;AACH,GAbmB;;AAcpBU,EAAAA,OAAO,CAACV,IAAD,EAAyC;AAC5C,UAAM;AAACW,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAmBZ,IAAzB;AACA,WAAOT,QAAQ,CAACW,IAAT,CAAe,cAAf,EAA8B;AAACS,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAA9B,EAAgDd,IAAhD,CAAqDC,GAAG,IAAEA,GAAG,CAACC,IAA9D,CAAP;AACH,GAjBmB;;AAkBpBa,EAAAA,MAAM,CAACb,IAAD,EAAyC;AAC3C,WAAOT,QAAQ,CAACW,IAAT,CAAe,cAAf,EAA8BF,IAA9B,EAAoCF,IAApC,CAAyCC,GAAG,IAAEA,GAAG,CAACC,IAAlD,CAAP;AACH,GApBmB;;AAqBpBc,EAAAA,UAAU,CAACV,EAAD,EAAW;AACjB,WAAOb,QAAQ,CAACM,GAAT,CAAc,cAAaO,EAAG,EAA9B,EAAiCN,IAAjC,CAAsCC,GAAG,IAAEA,GAAG,CAACC,IAA/C,CAAP;AACH,GAvBmB;;AAwBpBe,EAAAA,UAAU,CAACf,IAAD,EAAU;AAChB,WAAOT,QAAQ,CAACW,IAAT,CAAe,YAAf,EAA4BF,IAA5B,EAAkCF,IAAlC,CAAuCC,GAAG,IAAEA,GAAG,CAACC,IAAhD,CAAP;AACH;;AA1BmB,CAAjB","sourcesContent":["import axios from \"axios\";\nimport {cars} from \"../Redux/reducers/folderPageReducer\";\nimport {useSelector} from \"react-redux\";\nimport {AppStateType} from \"../Redux/Redux-store\";\n\nconst instance = axios.create({\n    baseURL: 'http://192.168.0.6:9000/',\n    //headers: {'Authorization': 'Bearer '+adminApi.accessToken() }\n    headers : {\"Authorization\": `Bearer fuck`},\n})\n\nexport const adminApi = {\n    getGoods() {\n        return instance.get<Array<cars>>(`api/cars`).then(res=> res.data);\n    },\n    addNewFolder(data:any){\n        return instance.post(`api/cars`, {...data}).then(res=>res.data);\n    },\n    updateFolderName(id:string,data:any){\n        return instance.put(`api/cars/${id}`, {...data}).then(res=>res.data);\n    },\n    deleteFolder(id:any, userId:any) {\n        const mainId= `?id=${id}&userId=${userId}`;\n        return instance.delete(`api/cars${mainId}`, ).then(res=> res.data);\n    },\n    loginMe(data:{email: string, password: string}) {\n        const {email,password} = data;\n        return instance.post(`/auth/signIn`, {email,password}).then(res=>res.data);\n    },\n    signUp(data:{email: string, password: string}) {\n        return instance.post(`/auth/signUp`, data).then(res=>res.data);\n    },\n    getFolders(id:string){\n        return instance.get(`/api/users/${id}`).then(res=>res.data);\n    },\n    addIdOfCar(data:any){\n        return instance.post(`/api/users`, data).then(res=>res.data);\n    }\n\n}"]},"metadata":{},"sourceType":"module"}