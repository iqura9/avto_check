{"ast":null,"code":"var _jsxFileName = \"/Users/iqura/web_storm_projects/avto/client/src/UI/loginForm/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _errors$username, _errors$password;\n\n  // get functions to build form with useForm() hook\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm(formOptions);\n  const {\n    errors\n  } = formState;\n\n  function onSubmit(_ref) {\n    let {\n      username,\n      password\n    } = _ref;\n    return userService.login(username, password).then(() => {\n      // get return url from query parameters or default to '/'\n      const returnUrl = router.query.returnUrl || '/';\n      router.push(returnUrl);\n    }).catch(alertService.error);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"username\",\n              type: \"text\",\n              ...register('username'),\n              className: `form-control ${errors.username ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              type: \"password\",\n              ...register('password'),\n              className: `form-control ${errors.password ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: formState.isSubmitting,\n            className: \"btn btn-primary\",\n            children: [formState.isSubmitting && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner-border spinner-border-sm mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 56\n            }, this), \"Login\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/account/register\",\n            className: \"btn btn-link\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"UOFrzdon+fOQ4ceFaWSO+SGVwvQ=\", true);\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/client/src/UI/loginForm/Login.tsx"],"names":["React","Login","register","handleSubmit","formState","useForm","formOptions","errors","onSubmit","username","password","userService","login","then","returnUrl","router","query","push","catch","alertService","error","message","isSubmitting"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,MAAMC,KAAmB,GAAG,MAAM;AAAA;;AAAA;;AAE9B;AACA,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAsCC,OAAO,CAACC,WAAD,CAAnD;AACA,QAAM;AAACC,IAAAA;AAAD,MAAWH,SAAjB;;AAEA,WAASI,QAAT,OAAwC;AAAA,QAAtB;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAsB;AACpC,WAAOC,WAAW,CAACC,KAAZ,CAAkBH,QAAlB,EAA4BC,QAA5B,EACFG,IADE,CACG,MAAM;AACR;AACA,YAAMC,SAAS,GAAGC,MAAM,CAACC,KAAP,CAAaF,SAAb,IAA0B,GAA5C;AACAC,MAAAA,MAAM,CAACE,IAAP,CAAYH,SAAZ;AACH,KALE,EAMFI,KANE,CAMIC,YAAY,CAACC,KANjB,CAAP;AAOH;;AAED,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAM,UAAA,QAAQ,EAAEjB,YAAY,CAACK,QAAD,CAA5B;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,IAAI,EAAC,MAA5B;AAAA,iBAAuCN,QAAQ,CAAC,UAAD,CAA/C;AACO,cAAA,SAAS,EAAG,gBAAeK,MAAM,CAACE,QAAP,GAAkB,YAAlB,GAAiC,EAAG;AADtE;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAII;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,4CAAmCF,MAAM,CAACE,QAA1C,qDAAmC,iBAAiBY;AAApD;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,IAAI,EAAC,UAA5B;AAAA,iBAA2CnB,QAAQ,CAAC,UAAD,CAAnD;AACO,cAAA,SAAS,EAAG,gBAAeK,MAAM,CAACG,QAAP,GAAkB,YAAlB,GAAiC,EAAG;AADtE;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAII;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,4CAAmCH,MAAM,CAACG,QAA1C,qDAAmC,iBAAiBW;AAApD;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAaI;AAAQ,YAAA,QAAQ,EAAEjB,SAAS,CAACkB,YAA5B;AAA0C,YAAA,SAAS,EAAC,iBAApD;AAAA,uBACKlB,SAAS,CAACkB,YAAV,iBAA0B;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAiBI,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,mBAAX;AAA+B,YAAA,SAAS,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA6BH,CA7CD;;GAAMrB,K;;KAAAA,K;AA+CN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\n\nconst Login: React.FC<{}> = () => {\n\n    // get functions to build form with useForm() hook\n    const {register, handleSubmit, formState} = useForm(formOptions);\n    const {errors} = formState;\n\n    function onSubmit({username, password}) {\n        return userService.login(username, password)\n            .then(() => {\n                // get return url from query parameters or default to '/'\n                const returnUrl = router.query.returnUrl || '/';\n                router.push(returnUrl);\n            })\n            .catch(alertService.error);\n    }\n\n    return (\n        <>\n            <div className=\"card\">\n                <h4 className=\"card-header\">Login</h4>\n                <div className=\"card-body\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div className=\"form-group\">\n                            <label>Username</label>\n                            <input name=\"username\" type=\"text\" {...register('username')}\n                                   className={`form-control ${errors.username ? 'is-invalid' : ''}`}/>\n                            <div className=\"invalid-feedback\">{errors.username?.message}</div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input name=\"password\" type=\"password\" {...register('password')}\n                                   className={`form-control ${errors.password ? 'is-invalid' : ''}`}/>\n                            <div className=\"invalid-feedback\">{errors.password?.message}</div>\n                        </div>\n                        <button disabled={formState.isSubmitting} className=\"btn btn-primary\">\n                            {formState.isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                            Login\n                        </button>\n                        <Link href=\"/account/register\" className=\"btn btn-link\">Register</Link>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}