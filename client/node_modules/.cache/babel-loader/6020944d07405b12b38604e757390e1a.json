{"ast":null,"code":"var _jsxFileName = \"/Users/iqura/web_storm_projects/avto/client/src/UI/show_array/ShowArray.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './showarray.css';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport CarImg from \"./CarImg\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let folderX = '';\n\nconst ShowArray = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [folder, setFolder] = useState();\n  const history = useHistory();\n  let len = 0;\n\n  const queryString = require('query-string');\n\n  const {\n    filter\n  } = queryString.parse(history.location.search);\n  if (!filter) history.push({\n    pathname: `/show/array/${id}`,\n    search: `filter=10`\n  });\n  len = Number(id) + Number(filter);\n  let i;\n  let q = [];\n\n  for (i = Number(id); i < len; i++) q.push(i);\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const foldersName = useSelector(state => state.folderPage.ArrayFolders);\n  let SortedCars = foldersName.slice(0);\n  SortedCars.sort(function (a, b) {\n    return b.Cars.length - a.Cars.length;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flew_row\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select_car\",\n        ...register(\"filter\"),\n        onChange: e => history.push({\n          pathname: `/show/array/${id}`,\n          search: `filter=${e.target.value}`\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"25\",\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"75\",\n          children: \"75\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"100\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"200\",\n          children: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"500\",\n          children: \"500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select_folder\",\n        ...register(\"filter2\"),\n        defaultChecked: true,\n        onChange: e => folderX = e.target.value,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          selected: true,\n          disabled: true,\n          hidden: true,\n          children: \"Select an Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), SortedCars.map(m => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: m._id,\n            children: m.nameOfFolder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Show_Cars\",\n      children: q.map(m => /*#__PURE__*/_jsxDEV(CarImg, {\n        id: Number(m)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowArray, \"HN9V73OpcRO40wgyuZnABFA/B/M=\", false, function () {\n  return [useParams, useHistory, useForm, useSelector];\n});\n\n_c = ShowArray;\nexport default ShowArray;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowArray\");","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/client/src/UI/show_array/ShowArray.tsx"],"names":["React","useState","useHistory","useParams","CarImg","useForm","useSelector","folderX","ShowArray","id","folder","setFolder","history","len","queryString","require","filter","parse","location","search","push","pathname","Number","i","q","register","handleSubmit","foldersName","state","folderPage","ArrayFolders","SortedCars","slice","sort","a","b","Cars","length","e","target","value","map","m","_id","nameOfFolder"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './showarray.css'\nimport {useHistory, useParams} from \"react-router-dom\";\nimport CarImg from \"./CarImg\";\nimport {useForm} from \"react-hook-form\";\nimport {useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../Redux/Redux-store\";\nexport let folderX ='';\nconst ShowArray = () => {\n    const {id} = useParams<{id:string}>();\n    const [folder, setFolder] = useState<string>();\n    const history = useHistory();\n    let len = 0;\n    const queryString = require('query-string');\n    const {filter} = queryString.parse(history.location.search);\n    if(!filter) history.push({\n        pathname: `/show/array/${id}`,\n        search: `filter=10`\n    })\n    len = Number(id)+Number(filter);\n    let i:number;\n    let q = [];\n    for(i = Number(id) ; i<len ;i++) q.push(i);\n\n\n    const { register, handleSubmit } = useForm();\n    const foldersName = useSelector( (state:AppStateType) => state.folderPage.ArrayFolders);\n    let SortedCars = foldersName.slice(0);\n    SortedCars.sort(function(a,b) {\n        return b.Cars.length - a.Cars.length;\n    });\n    return (<>\n        <div className='flew_row'>\n        <select className='select_car' {...register(\"filter\")} onChange={(e)=>history.push({\n            pathname: `/show/array/${id}`,\n            search: `filter=${e.target.value}`\n        })}>\n            <option value=\"10\">10</option>\n            <option value=\"25\">25</option>\n            <option value=\"50\">50</option>\n            <option value=\"75\">75</option>\n            <option value=\"100\">100</option>\n            <option value=\"200\">200</option>\n            <option value=\"500\">500</option>\n        </select>\n        <select className='select_folder' {...register(\"filter2\")} defaultChecked={true} onChange={(e)=> folderX=(e.target.value)}>\n            <option value=\"none\" selected disabled hidden>Select an Option</option>\n            {SortedCars.map( m=> {\n                return  <option value={m._id}>{m.nameOfFolder}</option>\n            })}\n        </select>\n        </div>\n        <div className='Show_Cars'>\n            {q.map(m=> <CarImg id={Number(m)}/>)}\n        </div>\n</>);\n};\n\nexport default ShowArray;"]},"metadata":{},"sourceType":"module"}