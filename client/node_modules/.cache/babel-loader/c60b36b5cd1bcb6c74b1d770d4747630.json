{"ast":null,"code":"var _jsxFileName = \"/Users/iqura/web_storm_projects/avto/client/src/UI/Folder/Folder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './folder.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { addNewFolder, chnageNameFolderThunk, deleteFolderX, setCarFromDB } from \"../../Redux/reducers/folderPageReducer\";\nimport * as uuid from 'uuid';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Folder = () => {\n  _s();\n\n  const user = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = history.location.pathname;\n  const cars = useSelector(state => state.folderPage.ArrayFolders);\n  if (cars.length === 0) dispatch(setCarFromDB(user._id));\n  let SortedCars = cars.slice(0); //SortedCars.sort(function(a,b) {\n  //  return b.Cars.length - a.Cars.length;\n  //});\n\n  const {\n    register,\n    handleSubmit,\n    getValues\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const [show, setShow] = useState('0');\n  let cool = '';\n\n  const folder = require(\"./../../img/folder.png\");\n\n  const nextPage = id => {\n    history.push(`/folder/${id}`);\n  };\n\n  const creatFolder = folderName => {\n    let newId = uuid.v4();\n    let newFolder = {\n      mainImg: '',\n      nameOfFolder: folderName + ' - ' + newId.slice(0, 4),\n      Cars: [],\n      userId: user._id\n    };\n    dispatch(addNewFolder(newFolder));\n  };\n\n  const onSubmit = () => {\n    const formValues = getValues();\n\n    if (formValues.status.length >= 1 && formValues.status.length <= 99) {\n      dispatch(chnageNameFolderThunk(cool, formValues.status));\n      setShow('0');\n    }\n  };\n\n  const deleteFolder = id => {\n    dispatch(deleteFolderX(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainBlockWrapper\",\n    children: [SortedCars.map(m => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Block_Wrapper\",\n        onClick: () => nextPage(m._id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Block_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Block_Center\",\n            children: m.Cars.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"Block_content-img\",\n            src: folder,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), show !== m._id && /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: e => {\n              e.stopPropagation();\n              setShow(m._id);\n            },\n            children: m.nameOfFolder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: e => {\n              e.stopPropagation();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onBlur: onSubmit,\n              children: show === m._id && /*#__PURE__*/_jsxDEV(\"input\", {\n                className: 'inputEdit',\n                ...register('status', {\n                  required: true\n                }),\n                autoFocus: true,\n                defaultValue: m.nameOfFolder,\n                onBlur: () => {\n                  cool = m._id;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deleteButtonFolder\",\n              type: \"button\",\n              onClick: e => {\n                e.stopPropagation();\n                deleteFolder(m._id);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, this);\n    }), location === '/folder' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Block_Wrapper\",\n      onClick: () => creatFolder('new folder'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Block_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Circle\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Block_Center-add\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Minus\",\n          children: \"Add Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Folder, \"Qo34LAug28F2bbyjV1snrD3VQqk=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useSelector, useForm];\n});\n\n_c = Folder;\nexport default Folder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Folder\");","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/client/src/UI/Folder/Folder.tsx"],"names":["React","useState","useDispatch","useSelector","useHistory","addNewFolder","chnageNameFolderThunk","deleteFolderX","setCarFromDB","uuid","useForm","Folder","user","state","auth","dispatch","history","location","pathname","cars","folderPage","ArrayFolders","length","_id","SortedCars","slice","register","handleSubmit","getValues","mode","show","setShow","cool","folder","require","nextPage","id","push","creatFolder","folderName","newId","v4","newFolder","mainImg","nameOfFolder","Cars","userId","onSubmit","formValues","status","deleteFolder","map","m","e","stopPropagation","required"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport './folder.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../Redux/Redux-store\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {\n    actions,\n    addNewFolder,\n    chnageNameFolderThunk,\n     deleteFolderX,\n    setCarFromDB\n} from \"../../Redux/reducers/folderPageReducer\";\nimport * as uuid from 'uuid';\nimport {useForm} from \"react-hook-form\";\nimport {adminApi} from \"../../Api/Api\";\n\nconst Folder = () => {\n    const user = useSelector( (state:AppStateType) => state.auth);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = history.location.pathname\n    const cars = useSelector((state: AppStateType) => state.folderPage.ArrayFolders);\n    if(cars.length===0) dispatch(setCarFromDB(user._id));\n    let SortedCars = cars.slice(0);\n    //SortedCars.sort(function(a,b) {\n      //  return b.Cars.length - a.Cars.length;\n    //});\n    const {register, handleSubmit,getValues} = useForm({mode: \"onBlur\"});\n    const [show, setShow] = useState('0');\n    let cool = '';\n    const folder = require(\"./../../img/folder.png\");\n    const nextPage = (id: string | number) => {\n        history.push(`/folder/${id}`);\n    }\n\n    const creatFolder = (folderName: string) => {\n        let newId = uuid.v4();\n        let newFolder = {\n            mainImg: '',\n            nameOfFolder: folderName + ' - ' + newId.slice(0, 4),\n            Cars: [],\n            userId: user._id\n        }\n        dispatch(addNewFolder(newFolder));\n\n    }\n    const onSubmit = () => {\n        const formValues = getValues();\n        if(formValues.status.length >=1 && formValues.status.length<=99){\n            dispatch(chnageNameFolderThunk(cool,formValues.status));\n            setShow('0')\n        }\n    }\n    const deleteFolder = (id:string) =>{\n        dispatch(deleteFolderX(id));\n    }\n    return (\n        <div className='MainBlockWrapper'>\n            {\n                SortedCars.map(m => {\n                    return (<div className='Block_Wrapper' onClick={() => nextPage(m._id)}>\n                            <div className='Block_content'>\n                                <span className='Block_Center'>{m.Cars.length}</span>\n                                <img className='Block_content-img' src={folder} alt=\"\"/>\n                                {\n                                    show !== m._id && <div onClick={(e) => {\n                                        e.stopPropagation();\n                                        setShow(m._id)\n                                    }}>{m.nameOfFolder}</div>\n                                }\n                                <div onClick={(e) => {\n                                    e.stopPropagation()\n                                }}>\n                                    <form onBlur={onSubmit}>\n                                        {\n\n                                            show === m._id &&\n                                            <input className={'inputEdit'} {...register('status', { required: true})} autoFocus={true} defaultValue={m.nameOfFolder}\n                                                   onBlur={() => {\n                                                       cool = (m._id)\n                                                   }}/>\n\n                                        }\n                                    </form>\n                                </div>\n                                <div>\n                                <button className='deleteButtonFolder' type='button' onClick={ (e) => {e.stopPropagation(); deleteFolder(m._id); }}>Delete</button>\n                                </div>\n                            </div>\n\n                        </div>\n\n                    )\n                })\n            }\n            {location === '/folder' &&\n                <div className='Block_Wrapper' onClick={() => creatFolder('new folder')}>\n\n                    <div className='Block_content'>\n                        <div className='Circle'>\n                            <span className='Block_Center-add'>+</span>\n                        </div>\n                        <div className='Minus'>Add Folder</div>\n                    </div>\n\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default Folder;"]},"metadata":{},"sourceType":"module"}