{"ast":null,"code":"var _jsxFileName = \"/Users/iqura/web_storm_projects/avto/client/src/UI/show_array/ShowArray.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './showarray.css';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport CarImg from \"./CarImg\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCarFromDB } from \"../../Redux/reducers/folderPageReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let folderX = '';\n\nconst ShowArray = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [folder, setFolder] = useState();\n  const dispatch = useDispatch();\n  const foldersName = useSelector(state => state.folderPage.ArrayFolders);\n  useEffect(() => {\n    if (foldersName.length === 0) {\n      let user = JSON.parse(String(localStorage.getItem('profile')));\n      dispatch(setCarFromDB(user._id));\n    }\n  }, []);\n  const history = useHistory();\n  let len = 0;\n\n  const queryString = require('query-string');\n\n  const {\n    filter\n  } = queryString.parse(history.location.search);\n  if (!filter) history.push({\n    pathname: `/show/array/${id}`,\n    search: `filter=10`\n  });\n  len = Number(id) + Number(filter);\n  let i;\n  let q = [];\n\n  for (i = Number(id); i < len; i++) q.push(i);\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  let SortedCars = foldersName.slice(0);\n  SortedCars.sort(function (a, b) {\n    return b.Cars.length - a.Cars.length;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flew_row\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select_car\",\n        ...register(\"filter\"),\n        onChange: e => history.push({\n          pathname: `/show/array/${id}`,\n          search: `filter=${e.target.value}`\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"25\",\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"75\",\n          children: \"75\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"100\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"200\",\n          children: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"500\",\n          children: \"500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select_folder\",\n        ...register(\"filter2\"),\n        onChange: e => folderX = e.target.value,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          selected: true,\n          disabled: true,\n          hidden: true,\n          children: \"Select an Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), SortedCars.map(m => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: m._id,\n            children: m.nameOfFolder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Show_Cars\",\n      children: q.map(m => /*#__PURE__*/_jsxDEV(CarImg, {\n        id: Number(m)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowArray, \"ah6x9OQ7iyUvE6rS/QzHc3ESlsA=\", false, function () {\n  return [useParams, useDispatch, useSelector, useHistory, useForm];\n});\n\n_c = ShowArray;\nexport default ShowArray;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowArray\");","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/client/src/UI/show_array/ShowArray.tsx"],"names":["React","useEffect","useState","useHistory","useParams","CarImg","useForm","useDispatch","useSelector","setCarFromDB","folderX","ShowArray","id","folder","setFolder","dispatch","foldersName","state","folderPage","ArrayFolders","length","user","JSON","parse","String","localStorage","getItem","_id","history","len","queryString","require","filter","location","search","push","pathname","Number","i","q","register","handleSubmit","SortedCars","slice","sort","a","b","Cars","e","target","value","map","m","nameOfFolder"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './showarray.css'\nimport {useHistory, useParams} from \"react-router-dom\";\nimport CarImg from \"./CarImg\";\nimport {useForm} from \"react-hook-form\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../Redux/Redux-store\";\nimport {setCarFromDB} from \"../../Redux/reducers/folderPageReducer\";\nexport let folderX ='';\nconst ShowArray = () => {\n    const {id} = useParams<{id:string}>();\n    const [folder, setFolder] = useState<string>();\n    const dispatch = useDispatch();\n    const foldersName = useSelector( (state:AppStateType) => state.folderPage.ArrayFolders);\n    useEffect(()=>{\n        if(foldersName.length === 0){\n            let user = JSON.parse(String(localStorage.getItem('profile')));\n            dispatch(setCarFromDB(user._id));\n        }\n    },[])\n    const history = useHistory();\n    let len = 0;\n    const queryString = require('query-string');\n    const {filter} = queryString.parse(history.location.search);\n    if(!filter) history.push({\n        pathname: `/show/array/${id}`,\n        search: `filter=10`\n    })\n    len = Number(id)+Number(filter);\n    let i:number;\n    let q = [];\n    for(i = Number(id) ; i<len ;i++) q.push(i);\n\n\n    const { register, handleSubmit } = useForm();\n    let SortedCars = foldersName.slice(0);\n    SortedCars.sort(function(a,b) {\n        return b.Cars.length - a.Cars.length;\n    });\n    return (<>\n        <div className='flew_row'>\n        <select className='select_car' {...register(\"filter\")} onChange={(e)=>history.push({\n            pathname: `/show/array/${id}`,\n            search: `filter=${e.target.value}`\n        })}>\n            <option value=\"10\">10</option>\n            <option value=\"25\">25</option>\n            <option value=\"50\">50</option>\n            <option value=\"75\">75</option>\n            <option value=\"100\">100</option>\n            <option value=\"200\">200</option>\n            <option value=\"500\">500</option>\n        </select>\n        <select className='select_folder' {...register(\"filter2\")}  onChange={(e)=> folderX=(e.target.value)}>\n            <option value=\"none\" selected disabled hidden>Select an Option</option>\n            {SortedCars.map( m=> {\n                return  <option value={m._id}>{m.nameOfFolder}</option>\n            })}\n        </select>\n        </div>\n        <div className='Show_Cars'>\n            {q.map(m=> <CarImg id={Number(m)}/>)}\n        </div>\n</>);\n};\n\nexport default ShowArray;"]},"metadata":{},"sourceType":"module"}