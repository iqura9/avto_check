{"ast":null,"code":"let initialState = {\n  ArrayFolders: [{\n    folderId: 'FolderNumber1',\n    mainImg: '',\n    nameOfFolder: 'folder',\n    Cars: [{\n      id: 1,\n      number: 334443113\n    }, {\n      id: 2,\n      number: 334443115\n    }, {\n      id: 3,\n      number: 334443114\n    }]\n  }, {\n    folderId: 'FolderNumber2',\n    mainImg: '',\n    nameOfFolder: 'folder2',\n    Cars: [{\n      id: 3,\n      number: 334443118\n    }, {\n      id: 4,\n      number: 334443119\n    }, {\n      id: 5,\n      number: 334443119\n    }, {\n      id: 6,\n      number: 334443119\n    }, {\n      id: 7,\n      number: 334443119\n    }]\n  }]\n};\nexport const folderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const actions = {\n  changeUrl: url => ({\n    type: 'newURL',\n    url\n  })\n};","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/src/Redux/reducers/folderPageReducer.ts"],"names":["initialState","ArrayFolders","folderId","mainImg","nameOfFolder","Cars","id","number","folderReducer","state","action","type","actions","changeUrl","url"],"mappings":"AAaA,IAAIA,YAAY,GAAG;AACfC,EAAAA,YAAY,EAAC,CACT;AACIC,IAAAA,QAAQ,EAAC,eADb;AAEIC,IAAAA,OAAO,EAAE,EAFb;AAGIC,IAAAA,YAAY,EAAE,QAHlB;AAIIC,IAAAA,IAAI,EAAC,CACD;AAACC,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,MAAM,EAAE;AAAf,KADC,EAED;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,MAAM,EAAE;AAAf,KAFC,EAGD;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,MAAM,EAAE;AAAf,KAHC;AAJT,GADS,EAWT;AACIL,IAAAA,QAAQ,EAAE,eADd;AAEIC,IAAAA,OAAO,EAAE,EAFb;AAGIC,IAAAA,YAAY,EAAE,SAHlB;AAIIC,IAAAA,IAAI,EAAC,CACD;AAACC,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,MAAM,EAAE;AAAf,KADC,EAED;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,MAAM,EAAE;AAAf,KAFC,EAGD;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,MAAM,EAAE;AAAf,KAHC,EAID;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,MAAM,EAAE;AAAf,KAJC,EAKD;AAACD,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,MAAM,EAAE;AAAf,KALC;AAJT,GAXS;AADE,CAAnB;AA2BA,OAAO,MAAMC,aAAa,GAAG,YAAyD;AAAA,MAAxDC,KAAwD,uEAAlDT,YAAkD;AAAA,MAApCU,MAAoC;;AAElF,UAAQA,MAAM,CAACC,IAAf;AACI;AAAS;AACL,eAAOF,KAAP;AACH;AAHL;AAKH,CAPM;AASP,OAAO,MAAMG,OAAO,GAAG;AACnBC,EAAAA,SAAS,EAAGC,GAAD,KAA0B;AAACH,IAAAA,IAAI,EAAE,QAAP;AAAiBG,IAAAA;AAAjB,GAA1B;AADQ,CAAhB","sourcesContent":["import {BaseThunkType, InferActionsTypes} from \"../Redux-store\";\n\ninterface infoType {\n    id: number,\n    number: number\n}\ninterface cars {\n    folderId:number | string\n    mainImg: string,\n    nameOfFolder: string,\n    Cars: Array<infoType>\n}\n\nlet initialState = {\n    ArrayFolders:[\n        {\n            folderId:'FolderNumber1',\n            mainImg: '',\n            nameOfFolder: 'folder',\n            Cars:[\n                {id:1, number: 334443113},\n                {id:2, number: 334443115},\n                {id:3, number: 334443114},\n            ] as Array<infoType>\n        },\n        {\n            folderId: 'FolderNumber2',\n            mainImg: '' as string | null,\n            nameOfFolder: 'folder2' as string,\n            Cars:[\n                {id:3, number: 334443118},\n                {id:4, number: 334443119},\n                {id:5, number: 334443119},\n                {id:6, number: 334443119},\n                {id:7, number: 334443119},\n            ] as Array<infoType>\n        }\n    ] as Array<cars>\n}\ntype InitialState = typeof initialState;\nexport const folderReducer = (state=initialState, action:ActionsTypes):InitialState =>{\n\n    switch (action.type) {\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const actions = {\n    changeUrl: (url:string | number) => ({type: 'newURL', url} as const)\n}\n\n\n\n\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>"]},"metadata":{},"sourceType":"module"}