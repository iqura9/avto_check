{"ast":null,"code":"var _jsxFileName = \"/Users/iqura/web_storm_projects/avto/src/UI/Folder/Folder.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './folder.css';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Folder = () => {\n  _s();\n\n  const cars = useSelector(state => state.folderPage.ArrayFolders);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cars.map(m => m.Cars.map(m1 => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: m1.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 47\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Folder, \"DI/4qKmPTensW4iAdQuk7H3ZQ8M=\", false, function () {\n  return [useSelector];\n});\n\n_c = Folder;\nexport default Folder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Folder\");","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/src/UI/Folder/Folder.tsx"],"names":["React","useSelector","Folder","cars","state","folderPage","ArrayFolders","map","m","Cars","m1","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAAQC,WAAR,QAA0B,aAA1B;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,IAAI,GAAGF,WAAW,CAAGG,KAAD,IAAwBA,KAAK,CAACC,UAAN,CAAiBC,YAA3C,CAAxB;AAEA,sBACI;AAAA,cACKH,IAAI,CAACI,GAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOF,GAAP,CAAYG,EAAE,iBAAI;AAAA,gBAAMA,EAAE,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,YAAlB,CAAf;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAVD;;GAAMT,M;UACWD,W;;;KADXC,M;AAYN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport './folder.css';\nimport {useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../Redux/Redux-store\";\n\nconst Folder = () => {\n    const cars = useSelector( (state:AppStateType) => state.folderPage.ArrayFolders);\n\n    return (\n        <div>\n            {cars.map( m => m.Cars.map( m1 => <div>{m1.id}</div>))\n\n            }\n        </div>\n    );\n};\n\nexport default Folder;"]},"metadata":{},"sourceType":"module"}