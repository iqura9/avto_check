{"ast":null,"code":"var _jsxFileName = \"/Users/iqura/web_storm_projects/avto/client/src/UI/Folder/Folder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './folder.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { addNewFolder, chnageNameFolderThunk, deleteFolderX, setCarFromDB } from \"../../Redux/reducers/folderPageReducer\";\nimport * as uuid from 'uuid';\nimport { useForm } from \"react-hook-form\";\nimport ShowFolderFC from \"./ShowFolderFC\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Folder = _ref => {\n  _s();\n\n  let {\n    seeAll\n  } = _ref;\n  const user = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = history.location.pathname;\n  const cars = useSelector(state => state.folderPage.ArrayFolders);\n  if (cars.length === 0) dispatch(setCarFromDB(user._id));\n  let SortedCars = cars.slice(0);\n  SortedCars.sort(function (a, b) {\n    return b.Cars.length - a.Cars.length;\n  });\n  const {\n    register,\n    handleSubmit,\n    getValues\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const [show, setShow] = useState('0');\n  let cool = '';\n\n  const folder = require(\"./../../img/folder.png\");\n\n  const nextPage = id => {\n    history.push(`/folder/${id}`);\n  };\n\n  const creatFolder = folderName => {\n    let newId = uuid.v4();\n    let newFolder = {\n      mainImg: '',\n      nameOfFolder: folderName + ' - ' + newId.slice(0, 4),\n      Cars: [],\n      userId: user._id\n    };\n    dispatch(addNewFolder(newFolder));\n  };\n\n  const onSubmit = () => {\n    const formValues = getValues();\n\n    if (formValues.status.length >= 1 && formValues.status.length <= 99) {\n      dispatch(chnageNameFolderThunk(cool, formValues.status));\n      setShow('0');\n    }\n  };\n\n  const deleteFolder = id => {\n    dispatch(deleteFolderX(id, user._id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ShowFolderFC, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Folder, \"Qo34LAug28F2bbyjV1snrD3VQqk=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useSelector, useForm];\n});\n\n_c = Folder;\nexport default Folder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Folder\");","map":{"version":3,"sources":["/Users/iqura/web_storm_projects/avto/client/src/UI/Folder/Folder.tsx"],"names":["React","useState","useDispatch","useSelector","useHistory","addNewFolder","chnageNameFolderThunk","deleteFolderX","setCarFromDB","uuid","useForm","ShowFolderFC","Folder","seeAll","user","state","auth","dispatch","history","location","pathname","cars","folderPage","ArrayFolders","length","_id","SortedCars","slice","sort","a","b","Cars","register","handleSubmit","getValues","mode","show","setShow","cool","folder","require","nextPage","id","push","creatFolder","folderName","newId","v4","newFolder","mainImg","nameOfFolder","userId","onSubmit","formValues","status","deleteFolder"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport './folder.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../Redux/Redux-store\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {\n    actions,\n    addNewFolder,\n    chnageNameFolderThunk,\n     deleteFolderX,\n    setCarFromDB\n} from \"../../Redux/reducers/folderPageReducer\";\nimport * as uuid from 'uuid';\nimport {useForm} from \"react-hook-form\";\nimport {adminApi} from \"../../Api/Api\";\nimport ShowFolderFC from \"./ShowFolderFC\";\n\ninterface IProps{\n    seeAll?: boolean\n}\n\n\nconst Folder:React.FC<IProps> = ({seeAll}) => {\n    const user = useSelector( (state:AppStateType) => state.auth);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = history.location.pathname\n    const cars = useSelector((state: AppStateType) => state.folderPage.ArrayFolders);\n    if(cars.length===0) dispatch(setCarFromDB(user._id));\n    let SortedCars = cars.slice(0);\n    SortedCars.sort(function(a,b) {\n        return b.Cars.length - a.Cars.length;\n    });\n\n    const {register, handleSubmit,getValues} = useForm({mode: \"onBlur\"});\n    const [show, setShow] = useState('0');\n    let cool = '';\n    const folder = require(\"./../../img/folder.png\");\n\n    const nextPage = (id: string | number) => {\n        history.push(`/folder/${id}`);\n    }\n\n    const creatFolder = (folderName: string) => {\n        let newId = uuid.v4();\n        let newFolder = {\n            mainImg: '',\n            nameOfFolder: folderName + ' - ' + newId.slice(0, 4),\n            Cars: [],\n            userId: user._id\n        }\n         dispatch(addNewFolder(newFolder));\n\n    }\n    const onSubmit = () => {\n        const formValues = getValues();\n        if(formValues.status.length >=1 && formValues.status.length<=99){\n            dispatch(chnageNameFolderThunk(cool,formValues.status));\n            setShow('0')\n        }\n    }\n    const deleteFolder = (id:string) =>{\n        dispatch(deleteFolderX(id,user._id));\n    }\n    return (\n        <ShowFolderFC/>\n    );\n};\n\nexport default Folder;"]},"metadata":{},"sourceType":"module"}